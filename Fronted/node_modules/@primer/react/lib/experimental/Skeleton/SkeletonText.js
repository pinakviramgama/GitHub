'use strict';

var SkeletonText_module = require('./SkeletonText.module.css.js');
var clsx = require('clsx');
require('@styled-system/css');
var merge = require('deepmerge');
var SkeletonBox = require('../../Skeleton/SkeletonBox.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var merge__default = /*#__PURE__*/_interopDefault(merge);

const SkeletonText = ({
  lines = 1,
  maxWidth,
  size = 'bodyMedium',
  className,
  style,
  ...rest
}) => {
  if (lines < 2) {
    return /*#__PURE__*/jsxRuntime.jsx(SkeletonBox.SkeletonBox, {
      "data-component": "SkeletonText",
      "data-text-skeleton-size": size,
      width: "100%",
      className: clsx.clsx(className, SkeletonText_module.SkeletonText),
      style: merge__default.default(style, {
        maxWidth
      }),
      ...rest
    });
  } else {
    return /*#__PURE__*/jsxRuntime.jsx("div", {
      "data-component": "multilineContainer",
      className: SkeletonText_module.SkeletonTextWrapper,
      style: merge__default.default(style, {
        maxWidth
      }),
      children: Array.from({
        length: lines
      }, (_, index) => /*#__PURE__*/jsxRuntime.jsx(SkeletonBox.SkeletonBox, {
        "data-component": "SkeletonText",
        "data-in-multiline": "true",
        "data-text-skeleton-size": size,
        className: clsx.clsx(className, SkeletonText_module.SkeletonText),
        ...rest
      }, index))
    });
  }
};

exports.SkeletonText = SkeletonText;
