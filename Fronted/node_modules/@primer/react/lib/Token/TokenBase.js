'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var clsx = require('clsx');
var TokenBase_module = require('./TokenBase.module.css.js');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const tokenSizes = {
  small: '16px',
  medium: '20px',
  large: '24px',
  xlarge: '32px'
};
const defaultTokenSize = 'medium';
const isTokenInteractive = ({
  as = 'span',
  onClick,
  onFocus,
  tabIndex = -1,
  disabled
}) => {
  if (disabled) {
    return false;
  }
  return Boolean(onFocus || onClick || tabIndex > -1 || ['a', 'button'].includes(as));
};
const TokenBase = /*#__PURE__*/React__default.default.forwardRef(({
  onRemove,
  onKeyDown,
  id,
  className,
  size = defaultTokenSize,
  isSelected: _isSelected,
  as = 'span',
  ...rest
}, forwardedRef) => {
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: as,
    onKeyDown: event => {
      onKeyDown && onKeyDown(event);
      if ((event.key === 'Backspace' || event.key === 'Delete') && onRemove) {
        onRemove();
      }
    },
    className: clsx.clsx(TokenBase_module.TokenBase, className),
    "data-cursor-is-interactive": isTokenInteractive(rest),
    "data-size": size,
    id: id === null || id === void 0 ? void 0 : id.toString(),
    ...rest,
    ref: forwardedRef
  });
});

exports.default = TokenBase;
exports.defaultTokenSize = defaultTokenSize;
exports.isTokenInteractive = isTokenInteractive;
exports.tokenSizes = tokenSizes;
