'use strict';

var React = require('react');
var IconButton = require('../Button/IconButton.js');
var useDialog = require('../hooks/useDialog.js');
var useRefObjectAsForwardedRef = require('../hooks/useRefObjectAsForwardedRef.js');
var octiconsReact = require('@primer/octicons-react');
var clsx = require('clsx');
var Dialog_module = require('./Dialog.module.css.js');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const noop = () => null;
function DialogHeader({
  children,
  className,
  ...rest
}) {
  if (React__default.default.Children.toArray(children).every(ch => typeof ch === 'string')) {
    children = /*#__PURE__*/jsxRuntime.jsx("span", {
      className: Dialog_module.HeaderChild,
      children: children
    });
  }
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: "div",
    ...rest,
    className: clsx.clsx(Dialog_module.Header, className),
    children: children
  });
}
DialogHeader.displayName = "DialogHeader";
const Dialog = /*#__PURE__*/React.forwardRef(({
  children,
  onDismiss = noop,
  isOpen,
  initialFocusRef,
  returnFocusRef,
  className,
  ...props
}, forwardedRef) => {
  const overlayRef = React.useRef(null);
  const modalRef = React.useRef(null);
  useRefObjectAsForwardedRef.useRefObjectAsForwardedRef(forwardedRef, modalRef);
  const closeButtonRef = React.useRef(null);
  const onCloseClick = () => {
    onDismiss();
    if (returnFocusRef && returnFocusRef.current) {
      returnFocusRef.current.focus();
    }
  };
  const {
    getDialogProps
  } = useDialog({
    modalRef,
    onDismiss: onCloseClick,
    isOpen,
    initialFocusRef,
    closeButtonRef,
    overlayRef
  });
  return isOpen ? /*#__PURE__*/jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [/*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
      as: "span",
      className: Dialog_module.Overlay,
      ref: overlayRef
    }), /*#__PURE__*/jsxRuntime.jsxs(BoxWithFallback.BoxWithFallback, {
      as: "div",
      tabIndex: -1,
      ref: modalRef,
      role: "dialog",
      "aria-modal": "true",
      ...props,
      ...getDialogProps(),
      className: clsx.clsx(Dialog_module.Dialog, className),
      "data-width": props.wide ? 'wide' : props.narrow ? 'narrow' : 'default',
      children: [/*#__PURE__*/jsxRuntime.jsx(IconButton.IconButton, {
        icon: octiconsReact.XIcon,
        ref: closeButtonRef,
        onClick: onCloseClick,
        "aria-label": "Close",
        variant: "invisible",
        className: Dialog_module.CloseIcon
      }), children]
    })]
  }) : null;
});
DialogHeader.displayName = 'Dialog.Header';
Dialog.displayName = 'Dialog';
var Dialog$1 = Object.assign(Dialog, {
  Header: DialogHeader
});

module.exports = Dialog$1;
