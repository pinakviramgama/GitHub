import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { defaultSxProp } from '../utils/defaultSxProp.js';
import classes from './CounterLabel.module.css.js';
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import Box from '../Box/Box.js';
import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';

const CounterLabel = /*#__PURE__*/forwardRef(({
  scheme = 'secondary',
  sx = defaultSxProp,
  className,
  children,
  ...rest
}, forwardedRef) => {
  const label = /*#__PURE__*/jsxs(VisuallyHidden, {
    children: ["\xA0(", children, ")"]
  });
  const counterProps = {
    ref: forwardedRef,
    ['aria-hidden']: 'true',
    ['data-scheme']: scheme,
    ...rest
  };
  if (sx !== defaultSxProp) {
    return /*#__PURE__*/jsxs(Fragment, {
      children: [/*#__PURE__*/jsx(Box, {
        as: "span",
        ...counterProps,
        className: clsx(className, classes.CounterLabel),
        sx: sx,
        children: children
      }), label]
    });
  }
  return /*#__PURE__*/jsxs(Fragment, {
    children: [/*#__PURE__*/jsx("span", {
      ...counterProps,
      className: clsx(className, classes.CounterLabel),
      children: children
    }), label]
  });
});
CounterLabel.displayName = 'CounterLabel';

export { CounterLabel as default };
