import { clsx } from 'clsx';
import React from 'react';
import styles from './SubNav.module.css.js';
import { defaultSxProp } from '../utils/defaultSxProp.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import Box from '../Box/Box.js';

const SubNav = /*#__PURE__*/React.forwardRef(function SubNav({
  actions,
  className,
  children,
  label,
  sx: sxProp = defaultSxProp,
  ...rest
}, forwardRef) {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsxs(Box, {
      as: "nav",
      ref: forwardRef,
      sx: sxProp,
      className: clsx(className, 'SubNav', styles.SubNav),
      "aria-label": label,
      ...rest,
      children: [/*#__PURE__*/jsx("div", {
        className: clsx('SubNav-body', styles.Body),
        children: children
      }), actions && /*#__PURE__*/jsx("div", {
        className: clsx('SubNav-actions', styles.Actions),
        children: actions
      })]
    });
  }
  return /*#__PURE__*/jsxs("nav", {
    ref: forwardRef,
    className: clsx(className, 'SubNav', styles.SubNav),
    "aria-label": label,
    ...rest,
    children: [/*#__PURE__*/jsx("div", {
      className: clsx('SubNav-body', styles.Body),
      children: children
    }), actions && /*#__PURE__*/jsx("div", {
      className: clsx('SubNav-actions', styles.Actions),
      children: actions
    })]
  });
});
SubNav.displayName = 'SubNav';

// SubNav.Links

const SubNavLinks = /*#__PURE__*/React.forwardRef(({
  children,
  className,
  sx: sxProp = defaultSxProp,
  ...rest
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      ref: forwardRef,
      sx: sxProp,
      className: clsx(className, styles.Links),
      ...rest,
      children: children
    });
  }
  return /*#__PURE__*/jsx("div", {
    ref: forwardRef,
    className: clsx(className, styles.Links),
    ...rest,
    children: children
  });
});
SubNavLinks.displayName = 'SubNav.Links';

// SubNav.Link

const SubNavLink = /*#__PURE__*/React.forwardRef(({
  children,
  className,
  sx: sxProp = defaultSxProp,
  ...rest
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "a",
      ref: forwardRef,
      sx: sxProp,
      className: clsx(className, styles.Link),
      "data-selected": rest.selected,
      "aria-current": rest.selected,
      ...rest,
      children: children
    });
  }
  return /*#__PURE__*/jsx("a", {
    ref: forwardRef,
    className: clsx(className, styles.Link),
    "data-selected": rest.selected,
    "aria-current": rest.selected,
    ...rest,
    children: children
  });
});
SubNavLink.displayName = 'SubNav.Link';
var SubNav$1 = Object.assign(SubNav, {
  Link: SubNavLink,
  Links: SubNavLinks
});

export { SubNav$1 as default };
