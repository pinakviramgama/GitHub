import { clsx } from 'clsx';
import React from 'react';
import classes from './Timeline.module.css.js';
import { defaultSxProp } from '../utils/defaultSxProp.js';
import { jsx } from 'react/jsx-runtime';
import Box from '../Box/Box.js';

const Timeline = /*#__PURE__*/React.forwardRef(({
  clipSidebar,
  className,
  sx: sxProp = defaultSxProp,
  ...props
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      sx: sxProp,
      ...props,
      className: clsx(className, classes.Timeline),
      ref: forwardRef,
      "data-clip-sidebar": clipSidebar ? '' : undefined
    });
  }
  return /*#__PURE__*/jsx("div", {
    ...props,
    className: clsx(className, classes.Timeline),
    ref: forwardRef,
    "data-clip-sidebar": clipSidebar ? '' : undefined
  });
});
Timeline.displayName = 'Timeline';

/**
 * @deprecated Use the `TimelineItemProps` type instead
 */

const TimelineItem = /*#__PURE__*/React.forwardRef(({
  condensed,
  className,
  sx: sxProp = defaultSxProp,
  ...props
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      ...props,
      className: clsx(className, 'Timeline-Item', classes.TimelineItem),
      ref: forwardRef,
      "data-condensed": condensed ? '' : undefined,
      sx: sxProp
    });
  }
  return /*#__PURE__*/jsx("div", {
    ...props,
    className: clsx(className, 'Timeline-Item', classes.TimelineItem),
    ref: forwardRef,
    "data-condensed": condensed ? '' : undefined
  });
});
TimelineItem.displayName = 'TimelineItem';
const TimelineBadge = ({
  sx: sxProp = defaultSxProp,
  className,
  ...props
}) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx("div", {
      className: classes.TimelineBadgeWrapper,
      children: /*#__PURE__*/jsx(Box, {
        ...props,
        sx: sxProp,
        className: clsx(className, classes.TimelineBadge)
      })
    });
  }
  return /*#__PURE__*/jsx("div", {
    className: classes.TimelineBadgeWrapper,
    children: /*#__PURE__*/jsx("div", {
      ...props,
      className: clsx(className, classes.TimelineBadge)
    })
  });
};
TimelineBadge.displayName = "TimelineBadge";
TimelineBadge.displayName = 'Timeline.Badge';
const TimelineBody = /*#__PURE__*/React.forwardRef(({
  className,
  sx: sxProp = defaultSxProp,
  ...props
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      ...props,
      className: clsx(className, classes.TimelineBody),
      ref: forwardRef,
      sx: sxProp
    });
  }
  return /*#__PURE__*/jsx("div", {
    ...props,
    className: clsx(className, classes.TimelineBody),
    ref: forwardRef
  });
});
TimelineBody.displayName = 'TimelineBody';
const TimelineBreak = /*#__PURE__*/React.forwardRef(({
  className,
  sx: sxProp = defaultSxProp,
  ...props
}, forwardRef) => {
  if (sxProp !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      ...props,
      className: clsx(className, classes.TimelineBreak),
      ref: forwardRef,
      sx: sxProp
    });
  }
  return /*#__PURE__*/jsx("div", {
    ...props,
    className: clsx(className, classes.TimelineBreak),
    ref: forwardRef
  });
});
TimelineBreak.displayName = 'TimelineBreak';
var Timeline$1 = Object.assign(Timeline, {
  Item: TimelineItem,
  Badge: TimelineBadge,
  Body: TimelineBody,
  Break: TimelineBreak
});

export { Timeline$1 as default };
