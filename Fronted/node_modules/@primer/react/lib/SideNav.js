'use strict';

var clsx = require('clsx');
var SideNav_module = require('./SideNav.module.css.js');
var defaultSxProp = require('./utils/defaultSxProp.js');
var BoxWithFallback = require('./internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');
var Link = require('./Link/Link.js');

function SideNav({
  as = 'nav',
  variant = 'normal',
  className,
  bordered,
  children,
  'aria-label': ariaLabel,
  sx: sxProp = defaultSxProp.defaultSxProp
}) {
  const variantClassName = variant === 'lightweight' ? 'lightweight' : 'normal';
  const newClassName = clsx.clsx(SideNav_module.SideNav, SideNav_module[`SideNavVariant--${variantClassName}`], 'sidenav', `variant-${variantClassName}`, className, {
    [SideNav_module.SideNavBordered]: bordered
  });
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: as,
    className: newClassName,
    "aria-label": ariaLabel,
    sx: sxProp,
    children: children
  });
}
SideNav.displayName = "SideNav";
const SideNavLink = ({
  selected,
  to,
  variant,
  className,
  children,
  ...rest
}) => {
  const isReactRouter = typeof to === 'string';
  const newClassName = clsx.clsx(SideNav_module.SideNavLink, className, {
    [SideNav_module.SideNavLinkFull]: variant === 'full'
  });
  // according to their docs, NavLink supports aria-current:
  // https://reacttraining.com/react-router/web/api/NavLink/aria-current-string
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: Link,
    "aria-current": isReactRouter || selected ? 'page' : undefined,
    className: newClassName,
    variant: variant,
    ...rest,
    children: children
  });
};
SideNavLink.displayName = "SideNavLink";
SideNavLink.displayName = 'SideNav.Link';
/** @deprecated Use [NavList](https://primer.style/react/NavList) instead */
var SideNav$1 = Object.assign(SideNav, {
  Link: SideNavLink
});

module.exports = SideNav$1;
