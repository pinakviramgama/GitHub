'use strict';

var defaultSxProp = require('../utils/defaultSxProp.js');
var reactIs = require('react-is');
var SegmentedControl_module = require('./SegmentedControl.module.css.js');
var clsx = require('clsx');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');

const SegmentedControlButton = ({
  children,
  leadingIcon: LeadingIcon,
  selected,
  sx: sxProp = defaultSxProp.defaultSxProp,
  className,
  // Note: this value is read in the `SegmentedControl` component to determine which button is selected but we do not need to apply it to an underlying element
  defaultSelected: _defaultSelected,
  ...rest
}) => {
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: "li",
    sx: sxProp,
    className: clsx.clsx(SegmentedControl_module.Item),
    "data-selected": selected ? '' : undefined,
    children: /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
      as: "button",
      "aria-current": selected,
      className: clsx.clsx(SegmentedControl_module.Button, className),
      type: "button",
      ...rest,
      children: /*#__PURE__*/jsxRuntime.jsxs("span", {
        className: clsx.clsx(SegmentedControl_module.Content, 'segmentedControl-content'),
        children: [LeadingIcon && /*#__PURE__*/jsxRuntime.jsx("div", {
          className: SegmentedControl_module.LeadingIcon,
          children: reactIs.isElement(LeadingIcon) ? LeadingIcon : /*#__PURE__*/jsxRuntime.jsx(LeadingIcon, {})
        }), /*#__PURE__*/jsxRuntime.jsx("div", {
          className: clsx.clsx(SegmentedControl_module.Text, 'segmentedControl-text'),
          "data-text": children,
          children: children
        })]
      })
    })
  });
};
SegmentedControlButton.displayName = "SegmentedControlButton";

module.exports = SegmentedControlButton;
