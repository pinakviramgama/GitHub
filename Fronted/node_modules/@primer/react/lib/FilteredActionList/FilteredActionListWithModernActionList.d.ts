import type React from 'react';
import type { TextInputProps } from '../TextInput';
import type { GroupedListProps, ListPropsBase } from '../SelectPanel/types';
import type { SxProp } from '../sx';
import type { FilteredActionListLoadingType } from './FilteredActionListLoaders';
export interface FilteredActionListProps extends Partial<Omit<GroupedListProps, keyof ListPropsBase>>, ListPropsBase, SxProp {
    loading?: boolean;
    loadingType?: FilteredActionListLoadingType;
    placeholderText?: string;
    filterValue?: string;
    onFilterChange: (value: string, e: React.ChangeEvent<HTMLInputElement>) => void;
    onListContainerRefChanged?: (ref: HTMLElement | null) => void;
    onInputRefChanged?: (ref: React.RefObject<HTMLInputElement>) => void;
    textInputProps?: Partial<Omit<TextInputProps, 'onChange'>>;
    inputRef?: React.RefObject<HTMLInputElement>;
    message?: React.ReactNode;
    className?: string;
    announcementsEnabled?: boolean;
    fullScreenOnNarrow?: boolean;
}
export declare function FilteredActionList({ loading, placeholderText, filterValue: externalFilterValue, loadingType, onFilterChange, onListContainerRefChanged, onInputRefChanged, items, textInputProps, inputRef: providedInputRef, sx, groupMetadata, showItemDividers, message, className, announcementsEnabled, fullScreenOnNarrow, ...listProps }: FilteredActionListProps): JSX.Element;
export declare namespace FilteredActionList {
    var displayName: string;
}
//# sourceMappingURL=FilteredActionListWithModernActionList.d.ts.map