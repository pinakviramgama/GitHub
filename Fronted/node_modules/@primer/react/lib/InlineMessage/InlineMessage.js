'use strict';

var octiconsReact = require('@primer/octicons-react');
var clsx = require('clsx');
var InlineMessage_module = require('./InlineMessage.module.css.js');
var defaultSxProp = require('../utils/defaultSxProp.js');
var jsxRuntime = require('react/jsx-runtime');
var Box = require('../Box/Box.js');

const variantToIcon = variant => {
  const icons = {
    warning: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertIcon, {
      className: InlineMessage_module.InlineMessageIcon
    }),
    critical: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertIcon, {
      className: InlineMessage_module.InlineMessageIcon
    }),
    success: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.CheckCircleIcon, {
      className: InlineMessage_module.InlineMessageIcon
    }),
    unavailable: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertIcon, {
      className: InlineMessage_module.InlineMessageIcon
    })
  };
  return icons[variant];
};
const variantToSmallIcon = variant => {
  const icons = {
    warning: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertFillIcon, {
      className: InlineMessage_module.InlineMessageIcon,
      size: 12
    }),
    critical: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertFillIcon, {
      className: InlineMessage_module.InlineMessageIcon,
      size: 12
    }),
    success: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.CheckCircleFillIcon, {
      className: InlineMessage_module.InlineMessageIcon,
      size: 12
    }),
    unavailable: /*#__PURE__*/jsxRuntime.jsx(octiconsReact.AlertFillIcon, {
      className: InlineMessage_module.InlineMessageIcon,
      size: 12
    })
  };
  return icons[variant];
};
function InlineMessage({
  children,
  className,
  size = 'medium',
  variant,
  sx: sxProp = defaultSxProp.defaultSxProp,
  ...rest
}) {
  const icon = size === 'small' ? variantToSmallIcon(variant) : variantToIcon(variant);
  if (sxProp !== defaultSxProp.defaultSxProp) {
    return /*#__PURE__*/jsxRuntime.jsxs(Box, {
      sx: sxProp,
      className: clsx.clsx(className, InlineMessage_module.InlineMessage),
      ...rest,
      "data-size": size,
      "data-variant": variant,
      children: [icon, children]
    });
  }
  return /*#__PURE__*/jsxRuntime.jsxs("div", {
    className: clsx.clsx(className, InlineMessage_module.InlineMessage),
    ...rest,
    "data-size": size,
    "data-variant": variant,
    children: [icon, children]
  });
}
InlineMessage.displayName = "InlineMessage";

exports.InlineMessage = InlineMessage;
