import React, { type ComponentPropsWithoutRef } from 'react';
import type { SxProp } from '../sx';
export type SummaryProps<As extends React.ElementType> = {
    /**
     * HTML element to render summary as.
     */
    as?: As;
    children?: React.ReactNode;
} & React.ComponentPropsWithoutRef<React.ElementType extends As ? As : 'summary'>;
declare function Summary<As extends React.ElementType>({ as, children, ...props }: SummaryProps<As>): React.JSX.Element;
declare namespace Summary {
    var displayName: string;
}
export { Summary };
declare const Details: React.ForwardRefExoticComponent<Omit<React.DetailedHTMLProps<React.DetailsHTMLAttributes<HTMLDetailsElement>, HTMLDetailsElement>, "ref"> & SxProp & React.RefAttributes<HTMLDetailsElement>> & {
    Summary: typeof Summary;
};
export type DetailsProps = ComponentPropsWithoutRef<'details'> & SxProp;
export default Details;
//# sourceMappingURL=Details.d.ts.map