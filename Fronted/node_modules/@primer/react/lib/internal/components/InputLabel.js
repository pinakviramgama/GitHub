'use strict';

var clsx = require('clsx');
var InputLabel_module = require('./InputLabel.module.css.js');
var BoxWithFallback = require('./BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');

function InputLabel({
  children,
  disabled,
  htmlFor,
  id,
  required,
  requiredText,
  requiredIndicator,
  visuallyHidden,
  sx,
  as = 'label',
  className,
  ...props
}) {
  return (
    /*#__PURE__*/
    // @ts-ignore weird typing issue with union for `as` prop
    jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
      as: as,
      sx: sx,
      "data-control-disabled": disabled ? '' : undefined,
      "data-visually-hidden": visuallyHidden ? '' : undefined,
      htmlFor: htmlFor,
      id: id,
      className: clsx.clsx(className, InputLabel_module.Label),
      ...props,
      children: required || requiredText ? /*#__PURE__*/jsxRuntime.jsxs("span", {
        className: InputLabel_module.RequiredText,
        children: [/*#__PURE__*/jsxRuntime.jsx("span", {
          children: children
        }), /*#__PURE__*/jsxRuntime.jsx("span", {
          "aria-hidden": requiredIndicator ? undefined : true,
          children: requiredText !== null && requiredText !== void 0 ? requiredText : '*'
        })]
      }) : children
    })
  );
}
InputLabel.displayName = "InputLabel";

exports.InputLabel = InputLabel;
