import { forwardRef } from 'react';
import { isElement } from 'react-is';
import { defaultSxProp } from '../../utils/defaultSxProp.js';
import classes from './UnderlineTabbedInterface.module.css.js';
import { clsx } from 'clsx';
import { BoxWithFallback } from './BoxWithFallback.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import CounterLabel from '../../CounterLabel/CounterLabel.js';

// Used for UnderlineNav and UnderlinePanels components

const GAP = 8;
const UnderlineWrapper = /*#__PURE__*/forwardRef(({
  children,
  className,
  sx: sxProp = defaultSxProp,
  ...rest
}, forwardedRef) => {
  return /*#__PURE__*/jsx(BoxWithFallback, {
    className: clsx(classes.UnderlineWrapper, className),
    ref: forwardedRef,
    sx: sxProp,
    ...rest,
    children: children
  });
});
const UnderlineItemList = /*#__PURE__*/forwardRef(({
  children,
  ...rest
}, forwardedRef) => {
  return /*#__PURE__*/jsx("ul", {
    className: classes.UnderlineItemList,
    ref: forwardedRef,
    ...rest,
    children: children
  });
});
const LoadingCounter = () => {
  return /*#__PURE__*/jsx("span", {
    className: classes.LoadingCounter
  });
};
LoadingCounter.displayName = "LoadingCounter"; // We can uncomment these when/if we add overflow behavior
// to the UnderlinePanels component
//
// export const StyledMoreButton = styled(Button)`
//   margin: 0;
//   border: 0;
//   background: transparent;
//   font-weight: normal;
//   box-shadow: none;
//   padding-block: var(--control-small-paddingBlock);
//   padding-inline: var(--control-small-paddingInline-condensed);
//   > span[data-component='trailingVisual'] {
//     margin-left: 0;
//   }
// `
// export const StyledOverflowDivider = styled.span`
//   display: inline-block;
//   border-left: 1px solid var(--borderColor-muted);
//   width: 1px;
//   margin-right: var(--control-xsmall-gap);
//   /* The height of the divider - reference from Figma */
//   height: 24px;
// `
// export const StyledMoreMenuListItem = styled.li`
//   display: flex;
//   align-items: center;
//   height: 45px;
// `
const UnderlineItem = /*#__PURE__*/forwardRef(({
  as = 'a',
  children,
  counter,
  icon: Icon,
  iconsVisible,
  loadingCounters,
  sx: sxProp = defaultSxProp,
  className,
  ...rest
}, forwardedRef) => {
  return /*#__PURE__*/jsxs(BoxWithFallback, {
    ref: forwardedRef,
    as: as,
    sx: sxProp,
    className: clsx(classes.UnderlineItem, className),
    ...rest,
    children: [iconsVisible && Icon && /*#__PURE__*/jsx("span", {
      "data-component": "icon",
      children: isElement(Icon) ? Icon : /*#__PURE__*/jsx(Icon, {})
    }), children && /*#__PURE__*/jsx("span", {
      "data-component": "text",
      "data-content": children,
      children: children
    }), counter !== undefined ? loadingCounters ? /*#__PURE__*/jsx("span", {
      "data-component": "counter",
      children: /*#__PURE__*/jsx(LoadingCounter, {})
    }) : /*#__PURE__*/jsx("span", {
      "data-component": "counter",
      children: /*#__PURE__*/jsx(CounterLabel, {
        children: counter
      })
    }) : null]
  });
});

export { GAP, LoadingCounter, UnderlineItem, UnderlineItemList, UnderlineWrapper };
