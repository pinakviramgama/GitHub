'use strict';

var React = require('react');
var model = require('./model.js');
var useResponsiveValue = require('../hooks/useResponsiveValue.js');
var clsx = require('clsx');
var Pagination_module = require('./Pagination.module.css.js');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');
var Box = require('../Box/Box.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const getViewportRangesToHidePages = showPages => {
  if (showPages && typeof showPages !== 'boolean') {
    return Object.keys(showPages).filter(key => !showPages[key]);
  }
  if (showPages) {
    return [];
  } else {
    return Object.keys(useResponsiveValue.viewportRanges);
  }
};
function usePaginationPages({
  theme,
  pageCount,
  currentPage,
  onPageChange,
  hrefBuilder,
  marginPageCount,
  showPages,
  surroundingPageCount,
  renderPage
}) {
  const pageChange = React__default.default.useCallback(n => e => onPageChange(e, n), [onPageChange]);
  const model$1 = React__default.default.useMemo(() => {
    return model.buildPaginationModel(pageCount, currentPage, !!showPages, marginPageCount, surroundingPageCount);
  }, [pageCount, currentPage, showPages, marginPageCount, surroundingPageCount]);
  const children = React__default.default.useMemo(() => {
    return model$1.map(page => {
      const {
        props,
        key,
        content
      } = model.buildComponentData(page, hrefBuilder, pageChange(page.num));
      if (renderPage && props.as !== 'span') {
        return renderPage({
          key,
          children: content,
          number: page.num,
          className: Pagination_module.Page,
          ...props
        });
      }
      return (
        /*#__PURE__*/
        // @ts-ignore giving me grief about children and "as" props
        jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
          as: "a",
          theme: theme,
          className: clsx.clsx(Pagination_module.Page),
          ...props,
          children: content
        }, key)
      );
    });
  }, [model$1, hrefBuilder, pageChange, renderPage, theme]);
  return children;
}
function Pagination({
  className,
  theme: _theme,
  pageCount,
  currentPage,
  onPageChange = noop,
  hrefBuilder = defaultHrefBuilder,
  marginPageCount = 1,
  showPages = true,
  surroundingPageCount = 2,
  renderPage,
  ...rest
}) {
  const pageElements = usePaginationPages({
    theme: _theme,
    pageCount,
    currentPage,
    onPageChange,
    hrefBuilder,
    marginPageCount,
    showPages,
    surroundingPageCount,
    renderPage
  });
  return /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
    as: "nav",
    className: clsx.clsx(Pagination_module.PaginationContainer, className),
    "aria-label": "Pagination",
    ...rest,
    children: /*#__PURE__*/jsxRuntime.jsx(Box, {
      display: "inline-block",
      className: Pagination_module.TablePaginationSteps,
      "data-hidden-viewport-ranges": getViewportRangesToHidePages(showPages).join(' '),
      children: pageElements
    })
  });
}
Pagination.displayName = "Pagination";
function defaultHrefBuilder(pageNum) {
  return `#${pageNum}`;
}
function noop() {}

module.exports = Pagination;
