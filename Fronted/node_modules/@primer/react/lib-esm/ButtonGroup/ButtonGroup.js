import React from 'react';
import classes from './ButtonGroup.module.css.js';
import { clsx } from 'clsx';
import { useFocusZone } from '../hooks/useFocusZone.js';
import { defaultSxProp } from '../utils/defaultSxProp.js';
import { jsx } from 'react/jsx-runtime';
import { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';
import Box from '../Box/Box.js';
import { FocusKeys } from '@primer/behaviors';

const ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup({
  children,
  className,
  role,
  sx,
  ...rest
}, forwardRef) {
  const buttons = React.Children.map(children, (child, index) => /*#__PURE__*/jsx("div", {
    children: child
  }, index));
  const buttonRef = useProvidedRefOrCreate(forwardRef);
  useFocusZone({
    containerRef: buttonRef,
    disabled: role !== 'toolbar',
    bindKeys: FocusKeys.ArrowHorizontal,
    focusOutBehavior: 'wrap'
  });
  if (sx !== defaultSxProp) {
    return /*#__PURE__*/jsx(Box, {
      as: "div",
      className: clsx(className, classes.ButtonGroup),
      role: role,
      ...rest,
      sx: sx,
      ref: buttonRef,
      children: buttons
    });
  }
  return /*#__PURE__*/jsx("div", {
    ref: buttonRef,
    className: clsx(className, classes.ButtonGroup),
    role: role,
    ...rest,
    children: buttons
  });
});
ButtonGroup.displayName = 'ButtonGroup';

export { ButtonGroup as default };
