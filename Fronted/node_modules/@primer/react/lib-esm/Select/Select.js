import React from 'react';
import { clsx } from 'clsx';
import { TextInputWrapper } from '../internal/components/TextInputWrapper.js';
import classes from './Select.module.css.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const ArrowIndicatorSVG = ({
  className
}) => {
  return /*#__PURE__*/jsx("svg", {
    "aria-hidden": "true",
    width: "16",
    height: "16",
    fill: "currentColor",
    xmlns: "http://www.w3.org/2000/svg",
    className: className,
    children: /*#__PURE__*/jsx("path", {
      d: "m4.074 9.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.043 9H4.251a.25.25 0 0 0-.177.427ZM4.074 7.47 7.47 4.073a.25.25 0 0 1 .354 0L11.22 7.47a.25.25 0 0 1-.177.426H4.251a.25.25 0 0 1-.177-.426Z"
    })
  });
};
ArrowIndicatorSVG.displayName = "ArrowIndicatorSVG";
const ArrowIndicator = ({
  className
}) => {
  return /*#__PURE__*/jsx(ArrowIndicatorSVG, {
    className: clsx(classes.ArrowIndicator, className)
  });
};
ArrowIndicator.displayName = "ArrowIndicator";
const Select = /*#__PURE__*/React.forwardRef(({
  block,
  children,
  className,
  contrast,
  defaultValue,
  disabled,
  placeholder,
  size,
  required,
  validationStatus,
  sx,
  ...rest
}, ref) => {
  var _ref;
  return /*#__PURE__*/jsxs(TextInputWrapper, {
    block: block,
    contrast: contrast,
    disabled: disabled,
    size: size,
    validationStatus: validationStatus,
    className: classes.TextInputWrapper,
    sx: sx,
    children: [/*#__PURE__*/jsxs("select", {
      ...rest,
      ref: ref,
      required: required,
      disabled: disabled,
      "aria-invalid": validationStatus === 'error' ? 'true' : 'false',
      className: clsx(className, classes.Select, disabled && classes.Disabled),
      "data-hasplaceholder": Boolean(placeholder),
      defaultValue: (_ref = defaultValue !== null && defaultValue !== void 0 ? defaultValue : placeholder) !== null && _ref !== void 0 ? _ref : undefined,
      children: [placeholder && /*#__PURE__*/jsx("option", {
        value: "",
        disabled: required,
        hidden: required,
        children: placeholder
      }), children]
    }), /*#__PURE__*/jsx(ArrowIndicator, {
      className: classes.ArrowIndicator
    })]
  });
});
const Option = props => /*#__PURE__*/jsx("option", {
  ...props
});
Option.displayName = "Option";
const OptGroup = props => /*#__PURE__*/jsx("optgroup", {
  ...props
});
OptGroup.displayName = "OptGroup";
var Select$1 = Object.assign(Select, {
  Option,
  OptGroup
});

export { Select$1 as default };
