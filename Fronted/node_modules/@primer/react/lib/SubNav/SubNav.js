'use strict';

var clsx = require('clsx');
var React = require('react');
var SubNav_module = require('./SubNav.module.css.js');
var defaultSxProp = require('../utils/defaultSxProp.js');
var jsxRuntime = require('react/jsx-runtime');
var Box = require('../Box/Box.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const SubNav = /*#__PURE__*/React__default.default.forwardRef(function SubNav({
  actions,
  className,
  children,
  label,
  sx: sxProp = defaultSxProp.defaultSxProp,
  ...rest
}, forwardRef) {
  if (sxProp !== defaultSxProp.defaultSxProp) {
    return /*#__PURE__*/jsxRuntime.jsxs(Box, {
      as: "nav",
      ref: forwardRef,
      sx: sxProp,
      className: clsx.clsx(className, 'SubNav', SubNav_module.SubNav),
      "aria-label": label,
      ...rest,
      children: [/*#__PURE__*/jsxRuntime.jsx("div", {
        className: clsx.clsx('SubNav-body', SubNav_module.Body),
        children: children
      }), actions && /*#__PURE__*/jsxRuntime.jsx("div", {
        className: clsx.clsx('SubNav-actions', SubNav_module.Actions),
        children: actions
      })]
    });
  }
  return /*#__PURE__*/jsxRuntime.jsxs("nav", {
    ref: forwardRef,
    className: clsx.clsx(className, 'SubNav', SubNav_module.SubNav),
    "aria-label": label,
    ...rest,
    children: [/*#__PURE__*/jsxRuntime.jsx("div", {
      className: clsx.clsx('SubNav-body', SubNav_module.Body),
      children: children
    }), actions && /*#__PURE__*/jsxRuntime.jsx("div", {
      className: clsx.clsx('SubNav-actions', SubNav_module.Actions),
      children: actions
    })]
  });
});
SubNav.displayName = 'SubNav';

// SubNav.Links

const SubNavLinks = /*#__PURE__*/React__default.default.forwardRef(({
  children,
  className,
  sx: sxProp = defaultSxProp.defaultSxProp,
  ...rest
}, forwardRef) => {
  if (sxProp !== defaultSxProp.defaultSxProp) {
    return /*#__PURE__*/jsxRuntime.jsx(Box, {
      as: "div",
      ref: forwardRef,
      sx: sxProp,
      className: clsx.clsx(className, SubNav_module.Links),
      ...rest,
      children: children
    });
  }
  return /*#__PURE__*/jsxRuntime.jsx("div", {
    ref: forwardRef,
    className: clsx.clsx(className, SubNav_module.Links),
    ...rest,
    children: children
  });
});
SubNavLinks.displayName = 'SubNav.Links';

// SubNav.Link

const SubNavLink = /*#__PURE__*/React__default.default.forwardRef(({
  children,
  className,
  sx: sxProp = defaultSxProp.defaultSxProp,
  ...rest
}, forwardRef) => {
  if (sxProp !== defaultSxProp.defaultSxProp) {
    return /*#__PURE__*/jsxRuntime.jsx(Box, {
      as: "a",
      ref: forwardRef,
      sx: sxProp,
      className: clsx.clsx(className, SubNav_module.Link),
      "data-selected": rest.selected,
      "aria-current": rest.selected,
      ...rest,
      children: children
    });
  }
  return /*#__PURE__*/jsxRuntime.jsx("a", {
    ref: forwardRef,
    className: clsx.clsx(className, SubNav_module.Link),
    "data-selected": rest.selected,
    "aria-current": rest.selected,
    ...rest,
    children: children
  });
});
SubNavLink.displayName = 'SubNav.Link';
var SubNav$1 = Object.assign(SubNav, {
  Link: SubNavLink,
  Links: SubNavLinks
});

module.exports = SubNav$1;
