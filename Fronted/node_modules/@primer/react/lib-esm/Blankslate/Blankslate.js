import { clsx } from 'clsx';
import { useMemo } from 'react';
import { Provider, useBlankslate } from './BlankslateContext.js';
import classes from './Blankslate.module.css.js';
import { jsx } from 'react/jsx-runtime';
import Link from '../Link/Link.js';
import { ButtonComponent } from '../Button/Button.js';

function Blankslate({
  border,
  children,
  narrow,
  spacious,
  className,
  size = 'medium',
  ...rest
}) {
  const value = useMemo(() => {
    return {
      size
    };
  }, [size]);
  return /*#__PURE__*/jsx(Provider, {
    value: value,
    children: /*#__PURE__*/jsx("div", {
      ...rest,
      className: classes.Container,
      children: /*#__PURE__*/jsx("div", {
        className: clsx(classes.Blankslate, className),
        "data-border": border ? '' : undefined,
        "data-narrow": narrow ? '' : undefined,
        "data-spacious": spacious ? '' : undefined,
        "data-size": size,
        children: children
      })
    })
  });
}
Blankslate.displayName = "Blankslate";
function Visual({
  children,
  className,
  ...rest
}) {
  return /*#__PURE__*/jsx("span", {
    ...rest,
    className: clsx('Blankslate-Visual', classes.Visual, className),
    children: children
  });
}
Visual.displayName = "Visual";
function Heading({
  as: Component = 'h2',
  children,
  className,
  ...rest
}) {
  return /*#__PURE__*/jsx(Component, {
    ...rest,
    className: clsx('Blankslate-Heading', classes.Heading, className),
    children: children
  });
}
Heading.displayName = "Heading";
function Description({
  children,
  className,
  ...rest
}) {
  return /*#__PURE__*/jsx("p", {
    ...rest,
    className: clsx('Blankslate-Description', classes.Description, className),
    children: children
  });
}
Description.displayName = "Description";
function PrimaryAction({
  children,
  href,
  ...props
}) {
  const {
    size
  } = useBlankslate();
  return /*#__PURE__*/jsx("div", {
    className: clsx('Blankslate-Action', classes.Action),
    children: /*#__PURE__*/jsx(ButtonComponent, {
      ...props,
      as: href ? 'a' : 'button',
      href: href,
      variant: "primary",
      size: size === 'small' ? 'small' : undefined,
      children: children
    })
  });
}
PrimaryAction.displayName = "PrimaryAction";
function SecondaryAction({
  children,
  href
}) {
  return /*#__PURE__*/jsx("div", {
    className: clsx('Blankslate-Action', classes.Action),
    children: /*#__PURE__*/jsx(Link, {
      href: href,
      children: children
    })
  });
}
SecondaryAction.displayName = "SecondaryAction";

export { Blankslate, Description, Heading, PrimaryAction, SecondaryAction, Visual };
