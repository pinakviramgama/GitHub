'use strict';

var React = require('react');
var IconButton = require('../Button/IconButton.js');
var Button = require('../Button/Button.js');
var clsx = require('clsx');
var ActionList_module = require('./ActionList.module.css.js');
var jsxRuntime = require('react/jsx-runtime');

const TrailingAction = /*#__PURE__*/React.forwardRef(({
  as = 'button',
  icon,
  label,
  href = null,
  className,
  ...props
}, forwardedRef) => {
  return /*#__PURE__*/jsxRuntime.jsx("span", {
    className: clsx.clsx(className, ActionList_module.TrailingAction),
    children: icon ? /*#__PURE__*/jsxRuntime.jsx(IconButton.IconButton, {
      as: as,
      "aria-label": label,
      icon: icon,
      variant: "invisible",
      tooltipDirection: "w",
      href: href
      // @ts-expect-error StyledButton wants both Anchor and Button refs
      ,
      ref: forwardedRef,
      className: ActionList_module.TrailingActionButton,
      ...props
    }) :
    /*#__PURE__*/
    // @ts-expect-error shhh
    jsxRuntime.jsx(Button.ButtonComponent, {
      variant: "invisible",
      as: as,
      href: href,
      ref: forwardedRef,
      className: ActionList_module.TrailingActionButton,
      ...props,
      children: label
    })
  });
});

exports.TrailingAction = TrailingAction;
