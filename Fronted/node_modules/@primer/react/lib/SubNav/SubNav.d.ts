import type { To } from 'history';
import React from 'react';
import type { ComponentProps } from '../utils/types';
import type { SxProp } from '../sx';
type StyledSubNavProps = React.ComponentProps<'nav'> & {
    actions?: React.ReactNode;
    align?: 'right';
    full?: boolean;
    label?: string;
} & SxProp;
type StyledSubNavLinksProps = React.ComponentProps<'div'> & SxProp;
type StyledSubNavLinkProps = React.ComponentProps<'a'> & {
    to?: To;
    selected?: boolean;
} & SxProp;
declare const SubNav: React.ForwardRefExoticComponent<Omit<StyledSubNavProps, "ref"> & React.RefAttributes<HTMLElement>>;
declare const SubNavLinks: React.ForwardRefExoticComponent<Omit<StyledSubNavLinksProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
declare const SubNavLink: React.ForwardRefExoticComponent<Omit<StyledSubNavLinkProps, "ref"> & React.RefAttributes<HTMLAnchorElement>>;
export type SubNavProps = ComponentProps<typeof SubNav>;
export type SubNavLinksProps = ComponentProps<typeof SubNavLinks>;
export type SubNavLinkProps = ComponentProps<typeof SubNavLink>;
declare const _default: React.ForwardRefExoticComponent<Omit<StyledSubNavProps, "ref"> & React.RefAttributes<HTMLElement>> & {
    Link: React.ForwardRefExoticComponent<Omit<StyledSubNavLinkProps, "ref"> & React.RefAttributes<HTMLAnchorElement>>;
    Links: React.ForwardRefExoticComponent<Omit<StyledSubNavLinksProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
};
export default _default;
//# sourceMappingURL=SubNav.d.ts.map