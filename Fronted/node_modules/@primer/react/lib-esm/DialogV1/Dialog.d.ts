import React, { type HTMLAttributes } from 'react';
import type { SxProp } from '../sx';
import type { ComponentProps } from '../utils/types';
export type DialogHeaderProps = React.PropsWithChildren<HTMLAttributes<HTMLDivElement>> & SxProp;
declare function DialogHeader({ children, className, ...rest }: DialogHeaderProps): React.JSX.Element;
declare namespace DialogHeader {
    var displayName: string;
}
declare const Dialog: React.ForwardRefExoticComponent<{
    isOpen?: boolean;
    onDismiss?: () => void;
    initialFocusRef?: React.RefObject<HTMLElement>;
    returnFocusRef?: React.RefObject<HTMLElement>;
} & {
    narrow?: boolean;
    wide?: boolean;
} & SxProp & React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
export type DialogProps = ComponentProps<typeof Dialog>;
declare const _default: React.ForwardRefExoticComponent<{
    isOpen?: boolean;
    onDismiss?: () => void;
    initialFocusRef?: React.RefObject<HTMLElement>;
    returnFocusRef?: React.RefObject<HTMLElement>;
} & {
    narrow?: boolean;
    wide?: boolean;
} & SxProp & React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>> & {
    Header: typeof DialogHeader;
};
export default _default;
//# sourceMappingURL=Dialog.d.ts.map