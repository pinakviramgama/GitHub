import { isResponsiveValue } from '../../hooks/useResponsiveValue.js';
import { DEFAULT_AVATAR_SIZE } from '../../Avatar/Avatar.js';
import { SkeletonBox } from '../../Skeleton/SkeletonBox.js';
import classes from './SkeletonAvatar.module.css.js';
import { clsx } from 'clsx';
import '@styled-system/css';
import merge from 'deepmerge';
import { jsx } from 'react/jsx-runtime';

const SkeletonAvatar = ({
  size = DEFAULT_AVATAR_SIZE,
  square,
  className,
  style,
  ...rest
}) => {
  const responsive = isResponsiveValue(size);
  const cssSizeVars = {};
  if (responsive) {
    for (const [key, value] of Object.entries(size)) {
      cssSizeVars[`--avatarSize-${key}`] = `${value}px`;
    }
  } else {
    cssSizeVars['--avatarSize-regular'] = `${size}px`;
  }
  return /*#__PURE__*/jsx(SkeletonBox, {
    className: clsx(className, classes.SkeletonAvatar),
    ...rest,
    "data-component": "SkeletonAvatar",
    "data-responsive": responsive ? '' : undefined,
    "data-square": square ? '' : undefined,
    style: merge(style, cssSizeVars)
  });
};
SkeletonAvatar.displayName = "SkeletonAvatar";

export { SkeletonAvatar };
